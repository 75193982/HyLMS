<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jshpsoft.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.jshpsoft.domain.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="receive_user_id" property="receiveUserId" jdbcType="INTEGER" />
    <result column="detail_id" property="detailId" jdbcType="VARCHAR" />
    <result column="mark" property="mark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="insert_user" property="insertUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
  </resultMap>
  
  <insert id="insert" parameterType="com.jshpsoft.domain.Message" >
    insert into office_message (receive_user_id, detail_id, 
      mark, status, insert_time, 
      insert_user, update_time, update_user, 
      del_flag)
    values (#{receiveUserId,jdbcType=INTEGER}, #{detailId,jdbcType=VARCHAR}, 
      #{mark,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{insertUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=VARCHAR})
  </insert>
 
  <update id="update" parameterType="com.jshpsoft.domain.Message" >
    update office_message
    <set >
      <if test="receiveUserId != null" >
        receive_user_id = #{receiveUserId,jdbcType=INTEGER},
      </if>
      <if test="detailId != null" >
        detail_id = #{detailId,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertUser != null" >
        insert_user = #{insertUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getPageList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	SELECT * from (
		SELECT row_number() over(order by insert_time desc) as rownumber,* 
			FROM office_message 
			WHERE 
				del_flag = 'N'
				<if test="mark != null and mark != ''" >
					AND ( mark LIKE concat('%', #{mark}, '%') )
				</if>  
				<if test="status != null and status != ''" >
					AND status = #{status}
				</if>  
				<if test="receiveUserId != null" >
					AND receive_user_id = #{receiveUserId}
				</if>  
	) as t 
	WHERE t.rownumber &gt; #{pageStartIndex} And t.rownumber &lt;= #{pageEndIndex}
  </select>
  
  <select id="getPageTotalCount" parameterType="java.util.HashMap" resultType="Integer">
	SELECT count(*)
		FROM office_message
		WHERE 
			del_flag = 'N'
			<if test="mark != null and mark != ''" >
				AND ( mark LIKE concat('%', #{mark}, '%') )
			</if>  
			<if test="status != null and status != ''" >
				AND status = #{status}
			</if>  
			<if test="receiveUserId != null" >
				AND receive_user_id = #{receiveUserId}
			</if>  
  </select>
	
  <select id="getByConditions" parameterType="java.util.HashMap" resultMap="BaseResultMap">
	SELECT *
		FROM office_message
		WHERE 
			del_flag = 'N'
			<if test="mark != null and mark != ''" >
				AND ( mark LIKE concat('%', #{mark}, '%') )
			</if>  
  </select>
	
  <select id="getById" parameterType="int"  resultMap="BaseResultMap">
	SELECT *
		FROM office_message
		WHERE id = #{id}
  </select>
  
  <select id="getUnReadMsgCount" parameterType="java.util.HashMap" resultType="Integer">
	SELECT count(*)
		FROM office_message
		WHERE 
			del_flag = 'N'
			AND status = 'N'
			AND receive_user_id = #{userId}
  </select>
</mapper>