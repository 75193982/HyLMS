<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jshpsoft.dao.CarStockInOutMapper" >
  <resultMap id="BaseResultMap" type="com.jshpsoft.domain.CarStockInOut" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="stock_id" property="stockId" jdbcType="INTEGER" />
    <result column="business_id" property="businessId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="mark" property="mark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="insert_user" property="insertUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  
  	<insert id="insert" parameterType="com.jshpsoft.domain.CarStockInOut" useGeneratedKeys="true" keyProperty= "id">
	    insert into carStockInOut 
	    ( type, stock_id, business_id, count, mark, status, insert_time, insert_user, update_time, update_user, del_flag )
	    values 
	    ( #{type}, #{stockId}, #{businessId}, #{count}, #{mark}, #{status}, #{insertTime}, #{insertUser}, #{updateTime}, #{updateUser}, #{delFlag} )
  	</insert>
  
  	<update id="update" parameterType="com.jshpsoft.domain.CarStockInOut" >
	    update carStockInOut
	    <set >
	      <if test="type != null and type != ''" >
	        type = #{type},
	      </if>
	      <if test="stockId != null" >
	        stock_id = #{stockId},
	      </if>
	      <if test="mark != null and mark != ''" >
	        mark = #{mark},
	      </if>
	      <if test="businessId != null" >
	        business_id = #{businessId},
	      </if>
	      <if test="count != null" >
	        count = #{count},
	      </if>
	      <if test="status != null and status != ''" >
	        status = #{status},
	      </if>
	      <if test="updateTime != null" >
	        update_time = #{updateTime},
	      </if>
	      <if test="updateUser != null and updateUser != ''" >
	        update_user = #{updateUser},
	      </if>
	      <if test="delFlag != null and delFlag != ''" >
	        del_flag = #{delFlag}
	      </if>
	    </set>
	    where id = #{id}
  	</update>
  	
  	<update id="updateById"  parameterType="java.util.HashMap">
		Update carStockInOut set update_time = #{updateTime}, update_user = #{updateUser}, del_flag = #{delFlag}
		where id = #{id}
	</update>
	
	<select id="getById" resultMap="BaseResultMap" parameterType="int">
		select a.*
		from carStockInOut a
		where a.id = #{id}
	</select>
	
	<select id="getByConditions" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		Select a.*
		From carStockInOut a 
		<where>
			<if test="delFlag != null and delFlag != ''">
				and a.del_flag = #{delFlag} 
			</if>
			<if test="stockId != null and stockId != ''">
				and a.stock_id = #{stockId} 
			</if>
			<if test="type != null and type != ''">
				and a.type = #{type} 
			</if>
			<if test="status != null and status != ''">
				and a.status = #{status} 
			</if>
			<if test="businessId != null and businessId != ''">
				and a.business_id = #{businessId} 
			</if>
		</where>
		order by a.insert_time asc
	</select>
	
	<update id="updateByBusinessId" parameterType="java.util.HashMap">
  		update carStockInOut
  		<set>
  			<if test="status != null and status != ''" >
	        	 status = #{status}, 
	      	</if>
	      	<if test="updateUser != null and updateUser != ''" >
	        	update_user = #{updateUser},
	      	</if>
	      	<if test="updateTime != null" >
	        	update_time = #{updateTime},
	      	</if>
	      	<if test="delFlag != null and delFlag != ''" >
	        	del_flag = #{delFlag},
	      	</if>
	    </set>
  		where business_id = #{businessId}
  	</update>
  
	<select id="getPageList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
	  	select * from (
  	select row_number() over(order by c.id desc) as rownumber,c.*,u.name as userName
  	from carStockInOut c
  	left join sys_user u on  u.id = c.insert_user
  	   <where>
  			c.del_flag='N'
  			<if test="startTime != null and startTime != ''">
  				and convert(char(16), c.insert_time,120) &gt;= convert(char(16), #{startTime},120)
  			</if>
  			<if test="endTime != null and endTime != ''">
  				and convert(char(16), c.insert_time,120) &lt;= convert(char(16), #{endTime},120)
  			</if>
			<if test="businessId != null and businessId != ''">
				and c.business_id=#{businessId}
			</if>
			<if test="type != null and type != ''">
			    and c.type = #{type}
			</if>
		</where>
		) as t
		WHERE t.rownumber &gt; #{pageStartIndex} And t.rownumber &lt;= #{pageEndIndex}
	</select>
	  
<select id="getPageTotalCount" resultType="Integer" parameterType="java.util.HashMap" >
  	select count(*) from carStockInOut 
  	   <where>
  			del_flag='N'
  			<if test="startTime != null and startTime != ''">
  				and convert(char(16), insert_time,120) &gt;= convert(char(16), #{startTime},120)
  			</if>
  			<if test="endTime != null and endTime != ''">
  				and convert(char(16), insert_time,120) &lt;= convert(char(16), #{endTime},120)
  			</if>
			<if test="businessId != null and businessId != '' ">
				and business_id=#{businessId}
			</if>
			<if test="type != null and type != ''">
			    and type = #{type}
			</if>
		</where>
  </select>
	
</mapper>